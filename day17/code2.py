







def combo(n, r):
    a,b,c = r
    if n <= 3:
        return n
    if n == 4:
        return a
    if n == 5:
        return b
    if n == 6:
        return c


def adv(i, r, s):
    a,b,c = r
    a = a // (2**combo(p[i+1], r))
    r = a,b,c
    return i + 2, r, s 

def bxl(i, r, s):
    a,b,c = r
    b = b ^ p[i+1]
    r = a,b,c
    return i + 2, r, s 

def bst(i, r, s):
    a,b,c = r
    b = combo(p[i+1], r) % 8
    r = a,b,c
    return i + 2, r, s 

def jnz(i, r, s):
    a,b,c = r
    if a != 0:
        return p[i+1], r, s 
    else:
        return i + 2, r, s 

def bxc(i, r, s):
    a,b,c = r
    b = b ^ c
    r = a,b,c
    return i + 2, r, s 

def out(i, r, s):
    s += str(combo(p[i+1], r) % 8) +','
    return i + 2, r, s 

def bdv(i, r, s):
    a,b,c = r
    b = a // (2**combo(p[i+1], r))
    r = a,b,c
    return i + 2, r, s 
        
def cdv(i, r, s):
    a,b,c = r
    c = a // (2**combo(p[i+1], r))
    r = a,b,c
    return i + 2, r, s    

f = {0:adv, 1:bxl, 2:bst, 3:jnz, 4:bxc, 5:out, 6:bdv, 7:cdv}

a = 44374556
b = 0
c = 0

op = "2,4,1,5,7,5,1,6,0,3,4,1,5,5,3,0"
p = list(map(int, op.split(',')))

def turn(a):
    s = ''
    b = 0
    c = 0
    r = a, b, c
    i = 0
    while i < len(p):
        i, r, s = f[p[i]](i, r, s)
    return s[:-1]
op = "2,4,1,5,7,5,1,6,0,3,4,1,5,5,3,0"
    
lst = [0, 3, 5, 5, 1, 4, 3, 0, 6, 1, 5, 7, 5, 1, 4, 2]

13247644446003

# sol = [0]
# for v in lst:
#     print(v,sol)
#     nsol = []
#     for s in sol:      
#         for k in range(s*8,(s+1)*8):
#             if int(turn(k)[0]) == v:
#                 nsol.append(k)
#     sol = nsol.copy()
#     nsol = []

sol = [13247644446003, 13247644544307, 13247644575027, 13247644577075, 13247644583219, 13247644595507, 13256234380595, 13256234478899, 13256234509619, 13256234511667, 13256234517811, 13256234530099, 13258650299699, 13258650398003, 13258650428723, 13258650430771, 13258650436915, 13258650449203, 13258782557491, 13258782569779, 13531112287539, 13531112385843, 13531112416563, 13531112418611, 13531112424755, 13531112437043, 13533528206643, 13533528304947, 13533528335667, 13533528337715, 13533528343859, 13533528356147, 13533660464435, 13533660476723, 13700226624819, 13700226723123, 13700226753843, 13700226755891, 13700226762035, 13700226774323, 13797400259891, 13797400358195, 13797400388915, 13797400390963, 13797400397107, 13797400409395, 13805990194483, 13805990292787, 13805990323507, 13805990325555, 13805990331699, 13805990343987, 13808406113587, 13808406211891, 13808406242611, 13808406244659, 13808406250803, 13808406263091, 13808538371379, 13808538383667]

for s in sol:      
    for k in range(s*8,(s+1)*8):
        if int(turn(k)[0]) == 2:
            print(k)
